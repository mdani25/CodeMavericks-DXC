# -*- coding: utf-8 -*-
"""drdvenkat_graph_to_tactile.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/19P3veYI6KGTspHS54yur0Occ92agkCRx
"""

from google.colab import files
uploaded = files.upload()

import cv2
import numpy as np
import matplotlib.pyplot as plt



! pip install svgwrite

import svgwrite

# Load the graph image (replace 'your_graph_image.jpg' with the actual file name)
image_path ="Line-Graph.png"
graph_image = cv2.imread(image_path)



# Convert the image to grayscale
gray_image = cv2.cvtColor(graph_image, cv2.COLOR_BGR2GRAY)

# display that image
from google.colab.patches import cv2_imshow
cv2_imshow(gray_image)

# Threshold the image to create a binary image
_, binary_image = cv2.threshold(gray_image, 200, 255, cv2.THRESH_BINARY)

# Find contours in the binary image
contours, _ = cv2.findContours(binary_image, cv2.RETR_EXTERNAL, cv2.CHAIN_APPROX_SIMPLE)

!pip install networkx

import networkx as nx

# Create a graph using the contours
graph = nx.Graph()
for contour in contours:
    # Extract node positions from contours
    centroid = np.mean(contour.squeeze(), axis=0)
    graph.add_node(tuple(centroid))

# Visualize the graph using matplotlib
pos = {node: np.array(node) for node in graph.nodes()}
nx.draw(graph, pos, with_labels=True, font_weight='bold', node_size=1000)
plt.show()

# Convert the graph to tactile graphics SVG  graph_to_svg(graph, pos)

# display that image
from google.colab.patches import cv2_imshow
image_path ="TACTILE_COVERTED_IMAGE.png"
graph_converted_image = cv2.imread(image_path)
graph_converted_image
cv2_imshow(graph_converted_image)



